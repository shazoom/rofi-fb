#!/usr/bin/env python3

# Designed to work with Python 3.6

import sys

if len(sys.argv) > 1:

    import asyncio
    import os
    from re import match
    from subprocess import Popen, PIPE
    from os.path import isfile, dirname, basename

    search_term = sys.argv[1] if len(sys.argv) >1 else ''
    if basename(sys.argv[0]) == 'rofi-gfb':
        TERMINAL = '/usr/bin/nemo'
        PARAMS = (search_term,)
    else:
        TERMINAL = '/usr/bin/gnome-search_terminal'
        PARAMS = ('--working-directory', search_term)

    async def run_locate(search_term):
        home = os.environ['HOME']
        search_cmd = '^%s/\([^.][^/]\+/\)\+%s[^/]*$' % (home, search_term)
        proc = await asyncio.create_subprocess_exec(
            'locate',
            '-ir',
            search_cmd,
            stdout=asyncio.subprocess.PIPE,
            stderr=asyncio.subprocess.PIPE)
        stdout, stderr = await proc.communicate()
        if not stdout and search_term not in home:
            print('[Nothing found... ]')
        else:
            if search_term in home:
                print(home)
            if stdout:
                print(stdout.decode())

    if match(r'/.*$', search_term):
        if isfile(search_term):
            PARAMS = (PARAMS[0], dirname(PARAMS[1]))
        Popen([TERMINAL, *PARAMS], stderr=PIPE, stdout=PIPE)
    else:
        loop = asyncio.get_event_loop()
        loop.run_until_complete(run_locate(search_term))
        loop.close()
